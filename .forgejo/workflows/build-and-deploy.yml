name: Build and deploy kcore.org

run-name: Build and deploy kcore.org via @${{ forgejo.actor }}
on: 
  push:
    branches:
      - master
   workflow_dispatch: {}

jobs:
  build-and-deploy:
    runs-on: docker
 
    container:
      image: ruby:3.4-bookworm

    steps:
      - name: Install dependencies
        run: |
          apt-get update && apt-get install -y rsync openssh-client nodejs

      - name: Add CA cert
        run: |
          echo "${{ secrets.CA_CERT }}" > /etc/ssl/certs/ca_cert.pem
          chmod 644 /etc/ssl/certs/ca_cert.pem
          /usr/sbin/update-ca-certificates

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bundler Cache
        # Caching gems will speed up subsequent builds
        uses: actions/cache@v4
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install Dependencies
        # Install bundler and then the gems specified in the Gemfile
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Build Jekyll Site
        # Runs the jekyll build command to generate the static site
        run: bundle exec jekyll build
        env:
          JEKYLL_ENV: production

      - name: copy feed.xml to /feed/index.xml
        run: |
          mkdir _site/feed
          cp _site/feed.xml _site/feed/index.xml

      - name: Deploy site
        # This step securely copies the built site to your server.
        # It requires several secrets to be configured in your Forgejo project.
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > private_key
          chmod 600 private_key
          rsync -avz --delete -e "ssh -i private_key -o StrictHostKeyChecking=no -p ${{secrets.SSH_PORT}}" _site/ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.REMOTE_PATH }}
          rm private_key

